# Create data frame with filter
# breath_valid = 0 if breath duration > 2 MAD
data_stims_valid <- subset(data_stims, resp_filter == 1 & HR_larger_FAR_filter == 1 & breath_valid == 1)
# Difference to block mean ------------------------------------------------
# Calculate mean angle in first block for each participant
block_angle_mean <- aggregate(breath_pos_circ ~ ID, subset(data_stims_valid, block == 1), FUN = mean)
# Define as circular object
block_angle_mean$breath_pos_circ <- circular(block_angle_mean$breath_pos_circ, type="angles", units="degree", rotation="clock", zero=0)
# Prepare difference to mean calculation
data_stims_valid$diff_angle2mean <- NA
for (i in block_angle_mean$ID) {
print(i)
diff <- data_stims_valid$breath_pos_circ[data_stims_valid$ID == i & data_stims_valid$block == 1] - block_angle_mean$breath_pos_circ[block_angle_mean$ID == i]
diff2 <- abs(diff) %% 360
diff3 <- ifelse(diff2 > 180, 360 - diff2, diff2)
data_stims_valid$diff_angle2mean[data_stims_valid$ID == i & data_stims_valid$block == 1] <- diff3
}
entrainment_data = data_stims_valid %>%
filter(trial_type != "FA") %>%
filter(trial < 31) %>% filter(block == 1) %>% filter(trial > 1)
model1 = lme4::lmer(formula = diff_angle2mean ~ 1 + (1 | ID), data = entrainment_data, REML = FALSE)
# Saturated Model
model2 = lme4::lmer(formula =  diff_angle2mean ~ 1 + trial + (1 | ID), data = entrainment_data, REML = FALSE)
# Compare Models
anova(model1, model2)
entrainment_data = data_stims_valid %>%
filter(trial_type != "FA") %>%
filter(trial < 31) %>% filter(block == 1)
trial_num <- aggregate(events_id ~ trial, entrainment_data, FUN="sum")
trial_num
trial_num_per_ID <- aggregate(events_id ~ ID, entrainment_data, FUN="sum")
trial_num_per_ID
sort(trial_num_per_ID)
trial_num_per_ID <- aggregate(events_id ~ ID, entrainment_data, FUN="sum")
sort(trial_num_per_ID)
sort(trial_num_per_ID$events_id)
boxplot(trial_num_per_ID$events_id)
is_outlier(trial_num_per_ID)
is_outlier(trial_num_per_ID$events_id)
trial_num_per_ID$events_id[is_outlier(trial_num_per_ID$events_id){}
trial_num_per_ID$events_id[is_outlier(trial_num_per_ID$events_id)]
trial_num_per_ID$ID[is_outlier(trial_num_per_ID$events_id)]
View(entrainment_data)
View(data_stims)
range(data_stims$events_id)
sum(data_stims$events_id==2)
data_stims$ID[data_stims$events_id==2]
?aggregate
trial_num_per_trial <- aggregate(events_id ~ trial, entrainment_data, FUN="sum")
trial_num_per_trial
trial_num_per_trial <- aggregate(block ~ trial, entrainment_data, FUN="sum")
trial_num_per_trial
trial_num_per_ID <- aggregate(block ~ ID, entrainment_data, FUN="sum")
trial_num_per_ID
sort(trial_num_per_ID)
sort(trial_num_per_ID$block)
trial_num_per_ID <- aggregate(events_id ~ ID, entrainment_data, FUN="sum")
sort(trial_num_per_ID$block)
sort(trial_num_per_ID$eevents_id)
sort(trial_num_per_ID$events_id)
trial_num_per_ID$ID[is_outlier(trial_num_per_ID$events_id)]
trial_num_per_ID <- aggregate(block ~ ID, entrainment_data, FUN="sum")
trial_num_per_ID$ID[is_outlier(trial_num_per_ID$block)]
outlier_ID
outlier_ID <- trial_num_per_ID$ID[is_outlier(trial_num_per_ID$block)]
outlier_ID
entrainment_data$ID %in% outlier_ID
entrainment_data$ID ~%in% outlier_ID
entrainment_data$ID !%in% outlier_ID
`%notin%` <- Negate(`%in%`)
entrainment_data2 = entrainment_data %>%
filter(ID %notin% outlier_ID)
trial_num_per_ID <- aggregate(block ~ ID, entrainment_data2, FUN="sum")
sort(trial_num_per_ID$block)
outlier_ID <- trial_num_per_ID$ID[is_outlier(trial_num_per_ID$block)]
outlier_ID
entrainment_data = entrainment_data %>%
filter(ID %notin% outlier_ID)
ggplot(entrainment_data, aes(y = diff_angle2mean, x = trial)) +
#  geom_smooth(aes(color = ID), alpha=0.5, se=F, method = "lm",  size = 0.4) +
geom_boxplot(aes(group = trial, color = ID), fill = "#EB726D", alpha=1) +
theme_cowplot() +
theme(legend.position = "none")
model1 = lme4::lmer(formula = diff_angle2mean ~ 1 + (1 | ID), data = entrainment_data, REML = FALSE)
# Saturated Model
model2 = lme4::lmer(formula =  diff_angle2mean ~ 1 + trial + (1 | ID), data = entrainment_data, REML = FALSE)
anova(model1, model2)
entrainment_data = data_stims_valid %>%
filter(trial_type != "FA") %>%
filter(trial < 31) %>% filter(block == 1)# %>% filter(trial > 1)
trial_num_per_trial <- aggregate(block ~ trial, entrainment_data, FUN="sum")
trial_num_per_ID <- aggregate(block ~ ID, entrainment_data, FUN="sum")
# Excluded outliers with very few trials
sort(trial_num_per_ID$block)
trial_num_per_ID$ID[is_outlier(trial_num_per_ID$block)]
barplot(entrainment_data$trial[entrainment_data$ID==39])
entrainment_data$trial[entrainment_data$ID==39]
entrainment_data$trial[entrainment_data$ID==22]
barplot(c(1:30),entrainment_data$trial[entrainment_data$ID==39])
barplot(c(1:30),entrainment_data$events_id[entrainment_data$ID==39])
entrainment_data$events_id[entrainment_data$ID==39]
# Settings ---------------------------------------------------------------
rm(list=ls())
data_dir <- '~/ownCloud/promotion/experiment/respirationCA/data'
# Load data ---------------------------------------------------------------
data_stims = readRDS(paste(data_dir, "resp_data_stims_final.Rds", sep="/"))
# Filter data -------------------------------------------------------------
data_stims$HR_larger_FAR_filter <- NA
# Minimum percentage points of hit rate (HR) > false alarm rate (FAR)
margin_hit_FA = 0.05
# Filter for hit rate > false alarm rate
for (i in unique(data_stims$ID)) {
for (b in unique(data_stims$block[data_stims$ID == i])) {
HR <- mean(data_stims$resp1[data_stims$ID == i & data_stims$block == b & data_stims$resp_filter == 1 & data_stims$stim_type == 1])
FAR <- mean(data_stims$resp1[data_stims$ID == i & data_stims$block == b & data_stims$resp_filter == 1 & data_stims$stim_type == 0])
data_stims$HR_larger_FAR_filter[data_stims$ID == i & data_stims$block == b] <- as.integer((HR-FAR)>margin_hit_FA)
}
}
# Create data frame with filter
# breath_valid = 0 if breath duration > 2 MAD
data_stims_valid <- subset(data_stims, resp_filter == 1 & HR_larger_FAR_filter == 1 & breath_valid == 1)
# Difference to block mean ------------------------------------------------
# Calculate mean angle in first block for each participant
block_angle_mean <- aggregate(breath_pos_circ ~ ID, subset(data_stims_valid, block == 1), FUN = mean)
# Define as circular object
block_angle_mean$breath_pos_circ <- circular(block_angle_mean$breath_pos_circ, type="angles", units="degree", rotation="clock", zero=0)
# Prepare difference to mean calculation
data_stims_valid$diff_angle2mean <- NA
for (i in block_angle_mean$ID) {
print(i)
diff <- data_stims_valid$breath_pos_circ[data_stims_valid$ID == i & data_stims_valid$block == 1] - block_angle_mean$breath_pos_circ[block_angle_mean$ID == i]
diff2 <- abs(diff) %% 360
diff3 <- ifelse(diff2 > 180, 360 - diff2, diff2)
data_stims_valid$diff_angle2mean[data_stims_valid$ID == i & data_stims_valid$block == 1] <- diff3
}
# Model -------------------------------------------------------------------
# Load packages
library("tidyverse")
library("cowplot")
# Create Entrainment Data
entrainment_data = data_stims_valid %>%
filter(trial_type != "FA") %>%
filter(trial < 31) %>% filter(block == 1)# %>% filter(trial > 1)
trial_num_per_trial <- aggregate(block ~ trial, entrainment_data, FUN="sum")
trial_num_per_ID <- aggregate(block ~ ID, entrainment_data, FUN="sum")
# Excluded outliers with very few trials
sort(trial_num_per_ID$block)
outlier_ID <- trial_num_per_ID$ID[is_outlier(trial_num_per_ID$block)]
`%notin%` <- Negate(`%in%`)
# Exclude only ID22, because 11 trials of ID39 spread across 30 trials
outlier_ID <- 22
entrainment_data = entrainment_data %>%
filter(ID %notin% outlier_ID)
# Plot Entrainment Data
ggplot(entrainment_data, aes(y = diff_angle2mean, x = trial)) +
#  geom_smooth(aes(color = ID), alpha=0.5, se=F, method = "lm",  size = 0.4) +
geom_boxplot(aes(group = trial, color = ID), fill = "#EB726D", alpha=1) +
theme_cowplot() +
theme(legend.position = "none")
# Intercept-only Model
model1 = lme4::lmer(formula = diff_angle2mean ~ 1 + (1 | ID), data = entrainment_data, REML = FALSE)
# Saturated Model
model2 = lme4::lmer(formula =  diff_angle2mean ~ 1 + trial + (1 | ID), data = entrainment_data, REML = FALSE)
# Compare Models
anova(model1, model2)
entrainment_data = data_stims_valid %>%
filter(trial_type != "FA") %>%
filter(trial < 31) %>% filter(block == 1)
entrainment_data = entrainment_data %>%
filter(ID %notin% outlier_ID)
model2
plot(model2)
ggplot(entrainment_data, aes(y = diff_angle2mean, x = trial)) +
#  geom_smooth(aes(color = ID), alpha=0.5, se=F, method = "lm",  size = 0.4) +
geom_boxplot(aes(group = trial, color = ID), fill = "#EB726D", alpha=1) +
theme_cowplot() +
theme(legend.position = "none")
?smooth
?geom_smooth
ggplot(entrainment_data, aes(y = diff_angle2mean, x = trial)) +
#  geom_smooth(aes(color = ID), alpha=0.5, se=F, method = "lm",  size = 0.4) +
geom_boxplot(aes(group = trial, color = ID), fill = "#EB726D", alpha=1) +
theme_cowplot() +
theme(legend.position = "none") +
geom_smooth(method='lm', formula= diff_angle2mean ~ 1 + trial + (1 | ID))
geom_smooth(method='lm', formula = diff_angle2mean ~ 1 + trial + (1 | ID))
ggplot(entrainment_data, aes(y = diff_angle2mean, x = trial)) +
#  geom_smooth(aes(color = ID), alpha=0.5, se=F, method = "lm",  size = 0.4) +
geom_boxplot(aes(group = trial, color = ID), fill = "#EB726D", alpha=1) +
theme_cowplot() +
theme(legend.position = "none") +
geom_smooth(method='lm', formula = diff_angle2mean ~ 1 + trial + (1 | ID))
ggplot(entrainment_data, aes(y = diff_angle2mean, x = trial)) +
#  geom_smooth(aes(color = ID), alpha=0.5, se=F, method = "lm",  size = 0.4) +
geom_boxplot(aes(group = trial, color = ID), fill = "#EB726D", alpha=1) +
theme_cowplot() +
theme(legend.position = "none") +
geom_smooth(method='lm', formula = y ~ 1 + x + (1 | ID))
model2
model2 = lme4::lmer(formula =  diff_angle2mean ~ 1 + trial + (1 | ID), data = entrainment_data, REML = FALSE)
?geom_abline
ggplot(entrainment_data, aes(y = diff_angle2mean, x = trial)) +
#  geom_smooth(aes(color = ID), alpha=0.5, se=F, method = "lm",  size = 0.4) +
geom_boxplot(aes(group = trial, color = ID), fill = "#EB726D", alpha=1) +
theme_cowplot() +
theme(legend.position = "none") +
geom_abline(slope = -0.5391, intercept = 79.6074)
ggplot(entrainment_data, aes(y = diff_angle2mean, x = trial)) +
#  geom_smooth(aes(color = ID), alpha=0.5, se=F, method = "lm",  size = 0.4) +
geom_boxplot(aes(group = trial, color = ID), fill = "#EB726D", alpha=1) +
theme_cowplot() +
theme(legend.position = "none") +
geom_abline(slope = -0.5391, intercept = 79.6074, lwd = 2)
ggplot(entrainment_data, aes(y = diff_angle2mean, x = trial)) +
#  geom_smooth(aes(color = ID), alpha=0.5, se=F, method = "lm",  size = 0.4) +
geom_boxplot(aes(group = trial, color = ID), fill = "#EB726D", alpha=1) +
theme_cowplot() +
theme(legend.position = "none") +
geom_abline(slope = -0.5391, intercept = 79.6074, lwd = 1.5)
ggplot(entrainment_data, aes(y = diff_angle2mean, x = trial)) +
#  geom_smooth(aes(color = ID), alpha=0.5, se=F, method = "lm",  size = 0.4) +
geom_boxplot(aes(group = trial, color = ID), fill = "#EB726D", alpha=1) +
theme_cowplot() +
theme(legend.position = "none") +
geom_abline(slope = -0.5391, intercept = 79.6074, lwd = 1.5, alpha = 0.7)
ggplot(entrainment_data, aes(y = diff_angle2mean, x = trial)) +
#  geom_smooth(aes(color = ID), alpha=0.5, se=F, method = "lm",  size = 0.4) +
geom_boxplot(aes(group = trial, color = ID), fill = "#EB726D", alpha=1) +
theme_cowplot() +
theme(legend.position = "none") +
geom_abline(slope = -0.5391, intercept = 79.6074, lwd = 1.5, alpha = 0.7) +
xlab("Trial") +
ggtitle("Difference to mean angle")
?ggtitle
ggplot(entrainment_data, aes(y = diff_angle2mean, x = trial)) +
#  geom_smooth(aes(color = ID), alpha=0.5, se=F, method = "lm",  size = 0.4) +
geom_boxplot(aes(group = trial, color = ID), fill = "#EB726D", alpha=1) +
theme_cowplot() +
theme(legend.position = "none") +
geom_abline(slope = -0.5391, intercept = 79.6074, lwd = 1.5, alpha = 0.7) +
xlab("Trial") +
theme(plot.title = element_text(hjust = 0.5)) +
ggtitle("Difference to mean angle per trial")
ggplot(entrainment_data, aes(y = diff_angle2mean, x = trial)) +
#  geom_smooth(aes(color = ID), alpha=0.5, se=F, method = "lm",  size = 0.4) +
geom_boxplot(aes(group = trial, color = ID), fill = "#EB726D", alpha=1) +
theme_cowplot() +
theme(legend.position = "none") +
geom_abline(slope = -0.5391, intercept = 79.6074, lwd = 1.5, alpha = 0.7) +
xlab("Trial") +
#theme(plot.title = element_text(hjust = 0.5)) +
ggtitle("Difference to mean angle per trial")
ggplot(entrainment_data, aes(y = diff_angle2mean, x = trial)) +
#  geom_smooth(aes(color = ID), alpha=0.5, se=F, method = "lm",  size = 0.4) +
geom_boxplot(aes(group = trial, color = ID), fill = "#EB726D", alpha=1) +
theme_cowplot() +
theme(legend.position = "none") +
geom_abline(slope = -0.5391, intercept = 79.6074, lwd = 1.5, alpha = 0.7) +
xlab("Trial") +
theme(plot.title = element_text(hjust = 0.5)) +
ggtitle("Difference to mean angle per trial")
ggplot(entrainment_data, aes(y = diff_angle2mean, x = trial)) +
#  geom_smooth(aes(color = ID), alpha=0.5, se=F, method = "lm",  size = 0.4) +
geom_boxplot(aes(group = trial, color = ID), fill = "#EB726D", alpha=1) +
theme_cowplot() +
theme(legend.position = "none") +
geom_abline(slope = -0.5391, intercept = 79.6074, lwd = 1.5, alpha = 0.7) +
xlab("Trial") +
#theme(plot.title = element_text(hjust = 0.5)) +
ggtitle("Difference to mean angle per trial")
ggplot(entrainment_data, aes(y = diff_angle2mean, x = trial)) +
#  geom_smooth(aes(color = ID), alpha=0.5, se=F, method = "lm",  size = 0.4) +
geom_boxplot(aes(group = trial, color = ID), fill = "#EB726D", alpha=1) +
theme_cowplot() +
theme(legend.position = "none") +
geom_abline(slope = -0.5391, intercept = 79.6074, lwd = 1.5, alpha = 0.7) +
theme(axis.text.y=element_blank())
xlab("Trial") +
#theme(plot.title = element_text(hjust = 0.5)) +
ggtitle("Difference to mean angle per trial")
ggplot(entrainment_data, aes(y = diff_angle2mean, x = trial)) +
#  geom_smooth(aes(color = ID), alpha=0.5, se=F, method = "lm",  size = 0.4) +
geom_boxplot(aes(group = trial, color = ID), fill = "#EB726D", alpha=1) +
theme_cowplot() +
theme(legend.position = "none") +
geom_abline(slope = -0.5391, intercept = 79.6074, lwd = 1.5, alpha = 0.7) +
theme(axis.text.y=element_blank()) +
xlab("Trial") +
#theme(plot.title = element_text(hjust = 0.5)) +
ggtitle("Difference to mean angle per trial")
ggplot(entrainment_data, aes(y = diff_angle2mean, x = trial)) +
#  geom_smooth(aes(color = ID), alpha=0.5, se=F, method = "lm",  size = 0.4) +
geom_boxplot(aes(group = trial, color = ID), fill = "#EB726D", alpha=1) +
theme_cowplot() +
theme(legend.position = "none") +
geom_abline(slope = -0.5391, intercept = 79.6074, lwd = 1.5, alpha = 0.7) +
theme(ylab = element_blank()) +
xlab("Trial") +
#theme(plot.title = element_text(hjust = 0.5)) +
ggtitle("Difference to mean angle per trial")
ggplot(entrainment_data, aes(y = diff_angle2mean, x = trial)) +
#  geom_smooth(aes(color = ID), alpha=0.5, se=F, method = "lm",  size = 0.4) +
geom_boxplot(aes(group = trial, color = ID), fill = "#EB726D", alpha=1) +
theme_cowplot() +
theme(legend.position = "none") +
geom_abline(slope = -0.5391, intercept = 79.6074, lwd = 1.5, alpha = 0.7) +
theme(axis.line.x = element_blank()) +
xlab("Trial") +
#theme(plot.title = element_text(hjust = 0.5)) +
ggtitle("Difference to mean angle per trial")
ggplot(entrainment_data, aes(y = diff_angle2mean, x = trial)) +
#  geom_smooth(aes(color = ID), alpha=0.5, se=F, method = "lm",  size = 0.4) +
geom_boxplot(aes(group = trial, color = ID), fill = "#EB726D", alpha=1) +
theme_cowplot() +
theme(legend.position = "none") +
geom_abline(slope = -0.5391, intercept = 79.6074, lwd = 1.5, alpha = 0.7) +
theme(axis.line.y.left = element_blank()) +
xlab("Trial") +
#theme(plot.title = element_text(hjust = 0.5)) +
ggtitle("Difference to mean angle per trial")
ggplot(entrainment_data, aes(y = diff_angle2mean, x = trial)) +
#  geom_smooth(aes(color = ID), alpha=0.5, se=F, method = "lm",  size = 0.4) +
geom_boxplot(aes(group = trial, color = ID), fill = "#EB726D", alpha=1) +
theme_cowplot() +
theme(legend.position = "none") +
geom_abline(slope = -0.5391, intercept = 79.6074, lwd = 1.5, alpha = 0.7) +
theme(axis.title.y = element_blank()) +
xlab("Trial") +
#theme(plot.title = element_text(hjust = 0.5)) +
ggtitle("Difference to mean angle per trial")
model2
= lme4::lmer(formula =  diff_angle2mean ~ 1 + trial, data = entrainment_data, REML = FALSE)
= lme4::lmer(formula =  diff_angle2mean ~ trial, data = entrainment_data, REML = FALSE)
= lme4::lmer(formula = diff_angle2mean ~ trial, data = entrainment_data, REML = FALSE)
= lme4::lmer(diff_angle2mean ~ trial, entrainment_data)
lme4::lmer(formula =  diff_angle2mean ~ 1 + trial, data = entrainment_data, REML = FALSE)
test <- lme4::lmer(formula =  diff_angle2mean ~ 1 + trial, data = entrainment_data, REML = FALSE)
test
test <- lmer(formula = diff_angle2mean ~ 1 + trial, data = entrainment_data)
test <- lm(formula = diff_angle2mean ~ 1 + trial, data = entrainment_data)
test
test <- lm(formula = diff_angle2mean ~ trial, data = entrainment_data)
test
test <- lm(formula = diff_angle2mean ~ trial, data = entrainment_data, REML = FALSE)
test <- lm(formula = diff_angle2mean ~ trial, data = entrainment_data)
?lmer
coef(model2)
coef(summary(model2))
model2
coef(model2)$(Intercept)
test <- coef(model2)
test
test$(Intercept)
test[[2]]
test[[1]]
test[[1]]$`(Intercept)`
test$`(Intercept)`
test[[1]]$`(Intercept)`
mean(test[[1]]$`(Intercept)`)
mean(test[[1]]$trial)
coef(summary(model2))
coef(model2)
coef_sum <- coef(summary(model2))
coef_sum
coef_sum[1,2]
View(coef_sum)
coef_sum['trial']
names(coef_sum)
coef_sum[2,1]
coefs <- coef(model2)
sd(coefs[[1]]$`(Intercept)`)
mean(coefs[[1]]$`(Intercept)`)
stderr(coefs[[1]]$`(Intercept)`)
std(coefs[[1]]$`(Intercept)`)
length(coefs)
length(coefs[[1]])
intercepts <- coefs[[1]]$`(Intercept)`
sd(intercepts)/sqrt(length(intercepts))
length(intercepts)
sd(intercepts)/sqrt(length(intercepts))
t.test(intercepts)
model2
sum(data_stims$breath_valid)
sum(data_stims$breath_valid, na.rm = T)
num_breath <- aggregate(breath_valid ~ ID, data_stims, FUN = sum)
num_breath
sun(num_breath$breath_valid)
sum(num_breath$breath_valid)
range(num_breath$breath_valid)
mean(num_breath$breath_valid)
subset(data_stims, breath_valid == 1)
data_stims$breath_duration
resp_cycle_t <- aggregate(breath_duration ~ ID, subset(data_stims, breath_valid == 1), FUN = mean)
resp_cycle_t
mean(resp_cycle_t)
mean(resp_cycle_t$breath_duration)
sd(resp_cycle_t$breath_duration)
range(resp_cycle_t$breath_duration)
num_breath <- aggregate(breath_valid ~ ID, data_stims_valid, FUN = sum)
range(num_breath$breath_valid)
mean(num_breath$breath_valid)
version
read.table("Downloads/downloads_vs_impact.csv")
read.csv2("Downloads/downloads_vs_impact.csv")
data<-read.csv2("Downloads/downloads_vs_impact.csv")
data<-read.csv("Downloads/downloads_vs_impact.csv")
data
median(data$downloads)
median(data$downloads,na.rm=T)
median <- aggregate(downloads ~ journal, data, FUN=median)
median
data$impact[data$journal=="nature methods"]
# Settings ---------------------------------------------------------------
rm(list=ls())
data_dir <- '~/ownCloud/promotion/experiment/respirationCA/data'
# Create colormap
# http://colorbrewer2.org/#type=qualitative&scheme=Set3&n=4
colmap <- c(rgb(141,211,199, maxColorValue=255),
rgb(255,255,179, maxColorValue=255),
rgb(190,186,218, maxColorValue=255),
rgb(251,128,114, maxColorValue=255))
# Load packages
library("cowplot")
library("ggpubr")
library("rstatix")
library("tidyverse")
# Load data ---------------------------------------------------------------
data_stims = readRDS(paste(data_dir, "resp_data_stims_final.Rds", sep="/"))
# Filter data -------------------------------------------------------------
data_stims$HR_larger_FAR_filter <- NA
# Minimum percentage points of hit rate (HR) > false alarm rate (FAR)
margin_hit_FA = 0.05
# Filter for hit rate > false alarm rate
for (i in unique(data_stims$ID)) {
for (b in unique(data_stims$block[data_stims$ID == i])) {
HR <- mean(data_stims$resp1[data_stims$ID == i & data_stims$block == b & data_stims$resp_filter == 1 & data_stims$stim_type == 1])
FAR <- mean(data_stims$resp1[data_stims$ID == i & data_stims$block == b & data_stims$resp_filter == 1 & data_stims$stim_type == 0])
data_stims$HR_larger_FAR_filter[data_stims$ID == i & data_stims$block == b] <- as.integer((HR-FAR)>margin_hit_FA)
}
}
# Create data frame with filter
# breath_valid = 0 if breath duration > 2 MAD
data_stims_valid <- subset(data_stims, resp_filter == 1 & HR_larger_FAR_filter == 1 & breath_valid == 1)
# General statistics ------------------------------------------------------
# Number of trials with valid respiratory cycle per participants
num_breath <- aggregate(breath_valid ~ ID, data_stims_valid, FUN = sum)
range(num_breath$breath_valid)
mean(num_breath$breath_valid)
# Mean duration per participant
resp_cycle_t <- aggregate(breath_duration ~ ID, subset(data_stims, breath_valid == 1), FUN = mean)
mean(resp_cycle_t$breath_duration)
sd(resp_cycle_t$breath_duration)
range(resp_cycle_t$breath_duration)
# respirationCA - Behavioral Data -----------------------------------------------
# Author:         Martin Grund
# Last update:    June 3, 2020
# Mac OS: "alt + cmd + T" runs section
# Linux: "ctrl + alt + T" runs section
# Prepare data (concatenate all txt files of exp_save)
#cat ID*/respirationCA_*_trials_*.txt > respirationCA_trials_tmp.txt
#sed '2,${/ID*/d}' respirationCA_trials_tmp.txt > respirationCA_trials.txt
rm(list = ls())
# SETTINGS ----------------------------------------------------------------
#code_dir <- '/data/pt_nro183/respirationCA/code/behavior'
#data_dir <- '/data/pt_nro183/respirationCA'
code_dir <- '~/ownCloud/promotion/experiment/respirationCA/code/respirationca/behavior'
data_dir <- '~/ownCloud/promotion/experiment/respirationCA/data'
behav_data <- paste(data_dir, '/respirationCA_trials.txt', sep = '')
# PRE-PROCESSING ----------------------------------------------------------
# Load functions
setwd(code_dir)
trial_filter <- dget("trial_filter.R")
block_analyze <- dget("block_analyze.R")
trial_analyze <- dget("trial_analyze.R")
ID_level <- dget("ID_level.R")
# Load data
d <- read.table(behav_data, header = TRUE, sep = "\t", fill = TRUE, stringsAsFactors = FALSE)
# Trial level
dt <- trial_filter(d)
# Block level
db <- block_analyze(dt)
# Participant level
dID1 <- ID_level(db)
# Participant level across blocks
dID <- trial_analyze(dt)
mean(dID$trial_t)
range(dID$trial_t)
mean(dID$ISI)
range(dID$ISI)
sd(dID$ISI)
# Settings ---------------------------------------------------------------
rm(list=ls())
data_dir <- '~/ownCloud/promotion/experiment/respirationCA/data'
# Create colormap
# http://colorbrewer2.org/#type=qualitative&scheme=Set3&n=4
colmap <- c(rgb(141,211,199, maxColorValue=255),
rgb(255,255,179, maxColorValue=255),
rgb(190,186,218, maxColorValue=255),
rgb(251,128,114, maxColorValue=255))
# Load packages
library("cowplot")
library("ggpubr")
library("rstatix")
library("tidyverse")
# Settings ---------------------------------------------------------------
rm(list=ls())
code_dir <- '~/ownCloud/promotion/experiment/respirationCA/code/respirationca'
data_dir <- '~/ownCloud/promotion/experiment/respirationCA/data'
# Load data ---------------------------------------------------------------
data_stims = readRDS(paste(data_dir, "resp_data_stims_final.Rds", sep="/"))
data_stims$stim_degree <- data_stims$breath_pos_circ
View(data_stims)
